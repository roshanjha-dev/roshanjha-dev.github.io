<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://roshanjha-dev.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://roshanjha-dev.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-05-18T19:03:23+00:00</updated><id>https://roshanjha-dev.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">How to run Windows 10/11 Professional on Digital Ocean Cloud Virtual Machine from Scratch</title><link href="https://roshanjha-dev.github.io/blog/2025/windows-on-digitalocean-droplet/" rel="alternate" type="text/html" title="How to run Windows 10/11 Professional on Digital Ocean Cloud Virtual Machine from Scratch"/><published>2025-05-13T00:00:00+00:00</published><updated>2025-05-13T00:00:00+00:00</updated><id>https://roshanjha-dev.github.io/blog/2025/windows-on-digitalocean-droplet</id><content type="html" xml:base="https://roshanjha-dev.github.io/blog/2025/windows-on-digitalocean-droplet/"><![CDATA[<p><a name="part-1"></a></p> <h2 id="part-1-create-ubuntu-droplet-vm1-for-preparing-the-windows-image">Part 1: Create Ubuntu droplet (VM1) for preparing the Windows Image</h2> <h3 id="1-create-ubuntu-virtual-machine-on-digitalocean">1. Create Ubuntu Virtual Machine on DigitalOcean</h3> <ul> <li>Choose Ubuntu 22, 24 or any LTS support version. I chose Ubuntu 22.04 (LTS) x64.</li> <li>Specs: <strong>4 GB Memory</strong> and <strong>2 CPUs</strong> as shown in the SS. This is minimum requirements I have taken for preparing Windows 10 Professional Image. You can take higher droplet specification if you want for Windows 11 Professional or any.</li> </ul> <p><img src="/assets/img/blog/2025/windows-on-digitalocean-droplet/create_vm1.png" alt="VM1 Creation" class="zoom-img" onclick="this.classList.toggle('zoomed')"/></p> <ul> <li>Choose <strong>Password based Authentication</strong> instead of SSH Key.</li> <li>Set and remember the password for later login to this droplet. Lets call this droplet as VM1.</li> <li>Hit <strong>Create Droplet</strong> button at the bottom.</li> </ul> <h3 id="2-ssh-into-the-vm">2. SSH into the VM</h3> <p>Open the terminal and SSH into the droplet (VM1) using the below command. Replace the &lt;VM1_IP&gt; with the public IP assigned to your droplet.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ssh root@&lt;VM1_IP&gt;
</code></pre></div></div> <ul> <li>Enter the password which you set while creating the droplet (VM1).</li> </ul> <h3 id="3-install-required-packages">3. Install Required Packages</h3> <p>After login to your droplet in Step 2, use the below commands and install the required packages</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>apt-get update <span class="o">&amp;&amp;</span> apt-get upgrade <span class="nt">-y</span>
<span class="nv">$ </span>apt-get <span class="nb">install </span>xfce4 firefox xrdp <span class="nb">gzip</span> <span class="nt">-y</span>
<span class="nv">$ </span>apt-get <span class="nb">install </span>qemu qemu-utils qemu-system-x86 <span class="nt">-y</span>
<span class="nv">$ </span><span class="nb">echo </span>xfce4-session <span class="o">&gt;</span> ~/.xsession
<span class="nv">$ </span>reboot
</code></pre></div></div> <p>In case of error while installing Qemu in the 3rd command, use the below command. Or Google it to get the similar command for installing that.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>apt-get <span class="nb">install </span>qemu-system-x86 qemu-utils qemu-kvm <span class="nt">-y</span>
</code></pre></div></div> <h3 id="4-connect-to-droplet-using-local-gui-client">4. Connect to Droplet using local GUI client</h3> <p>– <strong>Linux</strong>: If you are using Linux in your host machine and you have Remmina application installed, then skip the below Remmina installation (next three) commands for Ubuntu. Otherwise first install Remmina using below commands (Below commands are for Ubuntu/Debian, you can find similar commands for your Linux distro):</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>apt update
<span class="nv">$ </span><span class="nb">sudo </span>apt <span class="nb">install </span>remmina
<span class="nv">$ </span><span class="nb">sudo </span>apt <span class="nb">install </span>remmina remmina-plugin-rdp remmina-plugin-vnc remmina-plugin-secret
</code></pre></div></div> <p>and then proceed with further steps for Linux.</p> <ul> <li>Open Remmina → Enter VM1 IP → Hit Enter → Full screen by clicking on the button (shown in SS) → Enter Username: <code class="language-plaintext highlighter-rouge">root</code>, Password: VM1 password</li> </ul> <p><img src="/assets/img/blog/2025/windows-on-digitalocean-droplet/remmina_login_gui_ubuntu.png" alt="VM1 Creation" class="zoom-img" onclick="this.classList.toggle('zoomed')"/></p> <p>– <strong>Windows</strong>: If you are using Windows OS in your host machine, then simply follow below steps:</p> <p>Open Remote Desktop Connection → Enter VM1 IP → Username: <code class="language-plaintext highlighter-rouge">root</code> → Click Connect.</p> <p>In xrdp session, enter the Username: <code class="language-plaintext highlighter-rouge">root</code> and Password: VM1 password</p> <h3 id="5-download-the-following">5. Download the following:</h3> <p>After login into the droplet, open the browser and download the following iso in the machine (it will be downloaded in <code class="language-plaintext highlighter-rouge">/root/Downloads</code>). I am preferring Windows 10 Pro for this blog. You can download any Windows of your requirement. Also make sure your droplet VM1 (created in Part 1) should have that minimal requirements specifications (RAM and CPU) for your preferred Windows:</p> <ul> <li><a href="https://github.com/virtio-win/kvm-guest-drivers-windows/wiki/Driver-installation">VirtIO Drivers</a></li> <li><a href="https://www.microsoft.com/en-us/software-download/windows10ISO">Windows 10 ISO</a></li> </ul> <p>In case the download failing or any issue, close the RDP session and simply download these in your local PC. After downloading both in your local machine, follow next step.</p> <h3 id="6-transfer-iso-files-to-the-droplet">6. Transfer ISO Files to the Droplet</h3> <p>If you are unable to download the files directly in the droplet in Step 5, you can download those iso files in your local PC and copy those into the droplet using below commands. The same commands will work for Windows users too. Replace the &lt;VM1_IP&gt; with your droplet public IP:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>scp virtio-win-0.1.271.iso root@&lt;VM1_IP&gt;:/root/Downloads
<span class="nv">$ </span>scp Windows_10.iso root@&lt;VM1_IP&gt;:/root/Downloads
</code></pre></div></div> <p>PS: This will take little longer based on your Internet Speed.</p> <hr/> <p><a name="part-2"></a></p> <h2 id="part-2-prepare-windows-image">Part 2: Prepare Windows Image</h2> <h3 id="7-create-a-virtual-disk">7. Create a Virtual Disk</h3> <p>Open the terminal and SSH to your droplet (VM1) as done in Part 1 (Step 2). Run the below commands and create a virtual disk of the required size. This disk size will be the System Directory (Local Disk C) for installing Windows. You can give the required size as per the requirements for your preferred Windows you want to install. In my case I am installing Windows 10 Pro, where <code class="language-plaintext highlighter-rouge">80 GB</code> is good enough to install it. Later on, the extra storage remaining out of 120 GB can be used for creating new disk from the installed Windows in further steps.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cd </span>Downloads
<span class="nv">$ </span>qemu-img create <span class="nt">-f</span> raw wins_harddisk.raw 80G
<span class="nv">$ </span><span class="nb">ls</span>
</code></pre></div></div> <p>Check whether that all the three files are in this Downloads directory:</p> <ul> <li>wins_harddisk.raw</li> <li>Windows ISO</li> <li>Virtio ISO</li> </ul> <h3 id="8-run-qemu-emulator">8. Run QEMU Emulator</h3> <p>To install Windows in this Virtual Hard Disk, run the Qemu Emulator using the below command. Replace the &lt;windows.iso&gt; and &lt;virtio.iso&gt; with the corresponding iso file names:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>qemu-system-x86_64 <span class="se">\</span>
  <span class="nt">-m</span> 3000M <span class="se">\</span>
  <span class="nt">-cpu</span> host <span class="se">\</span>
  <span class="nt">-enable-kvm</span> <span class="se">\</span>
  <span class="nt">-boot</span> <span class="nv">order</span><span class="o">=</span>d <span class="se">\</span>
  <span class="nt">-usbdevice</span> tablet <span class="se">\</span>
  <span class="nt">-drive</span> <span class="nv">file</span><span class="o">=</span>wins_harddisk.raw,format<span class="o">=</span>raw,if<span class="o">=</span>virtio <span class="se">\</span>
  <span class="nt">-drive</span> <span class="nv">file</span><span class="o">=</span>/root/Downloads/&lt;windows.iso&gt;,media<span class="o">=</span>cdrom <span class="se">\</span>
  <span class="nt">-drive</span> <span class="nv">file</span><span class="o">=</span>/root/Downloads/&lt;virtio.iso&gt;,media<span class="o">=</span>cdrom <span class="se">\</span>
  <span class="nt">-vnc</span> :1
</code></pre></div></div> <p><strong>Note:</strong> You can see that I have used 3000M in above command, that represents I will be using 3000MB (out of 4GB) of RAM for QEMU to help me install Windows in that wins_harddisk.raw file. You have to be careful, for choosing this RAM size depends on your Windows version you are installing, as some part of RAM is also reserved by the droplet for itself. So, it may kill the running QEMU.</p> <p><strong>PS:</strong> This command will not print anything on the terminal, it will simply run without any output. But if you see warning or error as below. Simply ignore.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>W][07182.032853] pw.conf      | <span class="o">[</span>          conf.c: 1031 try_load_conf<span class="o">()]</span> can<span class="s1">'t load config client.conf: No such file or directory
[E][07182.033604] pw.conf      | [          conf.c: 1060 pw_conf_load_conf_for_context()] can'</span>t load config client.conf: No such file or directory
</code></pre></div></div> <p>For,</p> <ul> <li><strong>Linux User</strong>: Open Remmina Desktop Client → Select VNC → Enter <code class="language-plaintext highlighter-rouge">&lt;VM1_IP&gt;:5901</code> → Hit Enter</li> <li><strong>Windows User</strong>: Download the RealVNC Viewer Application using below link: <ul> <li><a href="https://www.realvnc.com/en/connect/download/viewer/">RealVNC Viewer</a></li> <li>Open RealVNC and Enter <code class="language-plaintext highlighter-rouge">&lt;VM1_IP&gt;:5901</code> → Hit Enter</li> </ul> </li> </ul> <p>Replace &lt;VM1_IP&gt; with public IP of the droplet. It will take some time to load the installation screen for proceeding with further installation steps. Keep checking in case Qemu which was running is still running. In case, it may be killed you have to rerun it with different RAM size. Qemu should be running till the complete installation and configuration of Windows in next few steps.</p> <h3 id="9-load-virtio-drivers">9. Load VirtIO Drivers</h3> <p>Follow the on screen steps and choose the <strong>Custom: Install Windows only (advanced)</strong> method and reach to the screen of disk creation. You will not see any disk over there. We have to first install few drivers and then we will get the empty wins harddisk <code class="language-plaintext highlighter-rouge">80 GB</code> which we created in previous step.</p> <p>Click <code class="language-plaintext highlighter-rouge">Load Driver</code> → Click Browse → Enter the VirtIO CD (shown in SS) → Select Balloon</p> <p><img src="/assets/img/blog/2025/windows-on-digitalocean-droplet/select_driver.png" alt="Select Driver" class="zoom-img" onclick="this.classList.toggle('zoomed')"/></p> <p>→ Select w10 (Select according to your version of windows you are installing) → Select amd64 → Click OK → Remove the check from <strong>Hide drivers that aren’t compatible with this computer’s hardware</strong> from the bottom.</p> <p><img src="/assets/img/blog/2025/windows-on-digitalocean-droplet/select_windows.png" alt="Select Driver" class="zoom-img" onclick="this.classList.toggle('zoomed')"/></p> <p>→ select first path → Click Next to install</p> <p><img src="/assets/img/blog/2025/windows-on-digitalocean-droplet/select_driver2.png" alt="Select Driver" class="zoom-img" onclick="this.classList.toggle('zoomed')"/></p> <p>– Repeat this Step 9 for remaining drivers listed below from VirtIO CD:</p> <ul> <li><code class="language-plaintext highlighter-rouge">Balloon</code></li> <li><code class="language-plaintext highlighter-rouge">NetKVM</code></li> <li><code class="language-plaintext highlighter-rouge">vioRNG</code></li> <li><code class="language-plaintext highlighter-rouge">VioSCSI</code></li> <li><code class="language-plaintext highlighter-rouge">VioStor</code></li> </ul> <p>– After installing all the above drivers, the virtual disk will be displayed as shown below.</p> <p><img src="/assets/img/blog/2025/windows-on-digitalocean-droplet/virtual_disk.png" alt="Virtual Disk" class="zoom-img" onclick="this.classList.toggle('zoomed')"/></p> <p>→ Select the disk → Click Next to install</p> <p><img src="/assets/img/blog/2025/windows-on-digitalocean-droplet/windows_install.png" alt="Windows Install" class="zoom-img" onclick="this.classList.toggle('zoomed')"/></p> <p>→ Complete the installation and give a <strong>Username</strong> for your Windows machine and select a <strong>STRONG</strong> password (Use combination of alphabets, numbers, special symbols). Remember both the <strong>Username</strong> and <strong>Password</strong>.</p> <p><strong>PS</strong>: Strong <strong>Username</strong> and <strong>Password</strong> for Windows Machine will help protect from active scans and attacks.</p> <hr/> <p><a name="part-3"></a></p> <h2 id="part-3-windows-configuration">Part 3: Windows Configuration</h2> <h3 id="10-inside-windows-desktop">10. Inside Windows Desktop</h3> <p>After installing the Windows, configure the below settings:</p> <ol> <li> <p>Go to Start menu, and search <strong>Remote Desktop Settings</strong> (as in System Settings), hit Enter. Toggle it on.</p> </li> <li>Change the RDP default port to some random port: <ul> <li>Open <strong>regedit</strong> from Start menu search</li> <li>Navigate to: <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp
</code></pre></div> </div> </li> <li>Modify <strong>PortNumber</strong> field value from <strong>3389</strong> to <strong>18021</strong> (Decimal)</li> </ul> <p><img src="/assets/img/blog/2025/windows-on-digitalocean-droplet/regedit_change_rdp_port.png" alt="change RDP port" class="zoom-img" onclick="this.classList.toggle('zoomed')"/></p> </li> <li><strong>Firewall Rule</strong> <ul> <li>Open <strong>Windows Defender Firewall with Advanced Security</strong> from Start menu.</li> <li>Select all (Ctrl + A) the inbound rules and click <strong>Disable Rule</strong> on the right pane to disable all inbound rules.</li> </ul> <p><img src="/assets/img/blog/2025/windows-on-digitalocean-droplet/disable_all_firewall_rules.png" alt="disable firewall inbound rules" class="zoom-img" onclick="this.classList.toggle('zoomed')"/></p> <ul> <li>Click on New Rule to add a new Inbound rule.</li> </ul> <p><img src="/assets/img/blog/2025/windows-on-digitalocean-droplet/select_port.png" alt="add new inbound rule" class="zoom-img" onclick="this.classList.toggle('zoomed')"/></p> <ul> <li>Allow inbound TCP port <strong>18021</strong> (Domain, Private, Public). Next, next.. keep everything default.</li> </ul> <p><img src="/assets/img/blog/2025/windows-on-digitalocean-droplet/port_no.png" alt="allow rdp port" class="zoom-img" onclick="this.classList.toggle('zoomed')"/></p> <ul> <li>Name: <strong>Rule 18021 for RDP</strong></li> </ul> </li> <li><strong>Disable Ctrl+Alt+Del requirement at lock screen</strong> <ul> <li>Open <strong>Local Security Policy</strong> in the installed Windows.</li> <li>Navigate to Local Policies\Security Options.</li> <li>Find the Interactive logon option for CTRL+ALT+DEL. (as shwon in SS below)</li> </ul> <p><img src="/assets/img/blog/2025/windows-on-digitalocean-droplet/local_security_policy.png" alt="Windows Install" class="zoom-img" onclick="this.classList.toggle('zoomed')"/></p> <ul> <li>Double Click and Enable it.</li> </ul> <p><img src="/assets/img/blog/2025/windows-on-digitalocean-droplet/enable_ctrl_alt_del.png" alt="Windows Install" class="zoom-img" onclick="this.classList.toggle('zoomed')"/></p> </li> <li><strong>Shutdown the machine</strong></li> </ol> <hr/> <p><a name="part-4"></a></p> <h2 id="part-4-compress-windows-hard-disk-and-use-it">Part 4: Compress Windows Hard Disk and Use it</h2> <p>Login to the droplet using SSH as done in Part 1 (Step 2), in case you close the logged in SSH. Go to the Downloads folder where you have your <strong>wins_harddisk.raw</strong> file.</p> <h3 id="11-gzip-the-virtual-hard-disk">11. Gzip the Virtual Hard Disk</h3> <p>Compress the <strong>wins_harddisk.raw</strong> file and give a name as shown in below command. Give proper name for the <code class="language-plaintext highlighter-rouge">.gz</code> file in the below command replacing <windows></windows></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">dd </span><span class="k">if</span><span class="o">=</span>wins_harddisk.raw <span class="nv">status</span><span class="o">=</span>progress | <span class="nb">gzip</span> <span class="nt">-c</span> <span class="o">&gt;</span> &lt;windows&gt;.gz
</code></pre></div></div> <p><img src="/assets/img/blog/2025/windows-on-digitalocean-droplet/gzip_harddisk.png" alt="compress disk" class="zoom-img" onclick="this.classList.toggle('zoomed')"/></p> <p>Be patient, this will take time to complete.</p> <h3 id="13-install-apache-and-move-gz-the-compressed-file-to-web-directory">13. Install Apache and Move <code class="language-plaintext highlighter-rouge">.gz</code> the compressed file to Web Directory</h3> <p>We will use Apache to download this compressed disk file to the droplet where we want to install and run Windows.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>apt <span class="nb">install </span>apache2
<span class="nv">$ </span>ufw allow <span class="s1">'Apache'</span>
<span class="nv">$ </span><span class="nb">cp </span>windows2010.gz /var/www/html/
</code></pre></div></div> <p>Check if you are able to download the compressed Windows file using the below URl from any different PC. Replace &lt;VM1_IP&gt; and &lt;windows&gt; as per your VM1 IP and your compressed filename you have given in previous step respectively.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>curl http://&lt;VM1_IP&gt;/&lt;windows&gt;.gz
</code></pre></div></div> <p>You can preserve this file, store it in your local by downloading or any web location from where can easily download for later use anytime you want a Windows machine on Cloud. Because later on we are going to delete this droplet VM1.</p> <hr/> <p><a name="part-5"></a></p> <h2 id="part-5-create-new-ubuntu-droplet-vm2-for-running-the-windows">Part 5: Create New Ubuntu droplet (VM2) for running the Windows</h2> <p>This is crucial step where we are actually going to uncompress the <code class="language-plaintext highlighter-rouge">.gz</code> windows disk and start using Windows.</p> <h3 id="14-create-new-droplet-vm2-on-digitalocean">14. Create New Droplet (VM2) on DigitalOcean</h3> <p>Select the minimum requirements according to your Windows version you chose in previous step. Since I used Windows 10 Pro. The following specs was good enough for me to run it. The same steps to be followed as in Part 1 (Step 1) for creating droplet.</p> <ul> <li>Specs: 4GB RAM, 2 CPUs</li> <li>After droplet is successfully created. Turn it off.</li> <li>Go to <strong>Recovery</strong> tab → Select <strong>Boot from Recovery ISO</strong>.</li> </ul> <p><img src="/assets/img/blog/2025/windows-on-digitalocean-droplet/switch_to_recovery_boot.png" alt="switch to recovery boot" class="zoom-img" onclick="this.classList.toggle('zoomed')"/></p> <ul> <li>Turn <strong>on</strong> droplet.</li> <li>Open <strong>Recovery Console</strong> from top left, below droplet On/Off toggle button.</li> </ul> <h3 id="15-in-recovery-console">15. In Recovery Console</h3> <ol> <li> <p>Press <strong>6</strong> to get bash prompt for Interactive Shell.</p> <p><img src="/assets/img/blog/2025/windows-on-digitalocean-droplet/recovery_console.png" alt="recovery console" class="zoom-img" onclick="this.classList.toggle('zoomed')"/></p> </li> <li> <p><em>Check disk name</em>:</p> <p>Run the below command and check the disk name whether its vda or sda. In my case, its vda.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">ls</span> <span class="nt">-la</span>
<span class="nv">$ </span>lsblk
</code></pre></div> </div> </li> <li> <p><em>Download and write Windows disk</em>:</p> <p>Replace the &lt;vda/sda&gt; with vda or sda depends on you disk name.</p> </li> </ol> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>wget <span class="nt">-O-</span> http://&lt;VM1_IP&gt;/windows2010.gz | <span class="nb">gunzip</span> | <span class="nb">dd </span><span class="nv">of</span><span class="o">=</span>/dev/&lt;vda/sda&gt;
</code></pre></div></div> <p><img src="/assets/img/blog/2025/windows-on-digitalocean-droplet/download_windows.png" alt="download windows" class="zoom-img" onclick="this.classList.toggle('zoomed')"/></p> <p>Be patient, sit back and relax! Its almost done. This step gonna take time in this new droplet VM2.</p> <h3 id="16-switch-back-to-boot-from-hard-drive">16. Switch back to Boot from Hard Drive</h3> <p>After the download finishes, you are done:</p> <ul> <li>Turn <strong>off</strong> the droplet (VM2)</li> <li> <p>Switch back to <strong>Boot from Hard Drive</strong> <img src="/assets/img/blog/2025/windows-on-digitalocean-droplet/switch_back_to_boot_from_hard_drive.png" alt="switch to hard drive" class="zoom-img" onclick="this.classList.toggle('zoomed')"/></p> </li> <li>Turn <strong>on</strong> the droplet.</li> </ul> <hr/> <p><a name="part-6"></a></p> <h2 id="part-6-network-configuration-in-windows">Part 6: Network Configuration in Windows</h2> <p>To configure internet in the Windows machine on droplet VM2, follow the below steps:</p> <ol> <li> <p>Go to <strong>Access</strong> tab and click <strong>Launch Recovery Console</strong> to open Windows in recovery mode.</p> <p><img src="/assets/img/blog/2025/windows-on-digitalocean-droplet/launch_recovery_console.png" alt="launch recovery console" class="zoom-img" onclick="this.classList.toggle('zoomed')"/></p> </li> <li>Go to <strong>View Network Connections</strong> from Start menu.</li> <li>Double click first Ethernet interface <strong>Ethernet Instance 0 2</strong> and go to <strong>Properties</strong>.</li> <li> <p>Go to <strong>Internet Protocol Version 4 (TCP/IPv4) &gt; Properties</strong> and give the IPs and Gateway manually, same as displayed at the bottom.</p> <p><img src="/assets/img/blog/2025/windows-on-digitalocean-droplet/configure_ip_gateway2.png" alt="configure ip" class="zoom-img" onclick="this.classList.toggle('zoomed')"/></p> </li> <li>Set: <ul> <li><strong>IP address</strong></li> <li><strong>Subnet mask</strong></li> <li><strong>Default gateway</strong></li> <li><strong>Preferred DNS server</strong></li> <li><strong>Alternate DNS server</strong></li> </ul> <p><strong>Note</strong>: You can keep the DNS same as shown in the SS. That is Google DNS IP 8.8.8.8 and alternate DNS as 8.8.4.4</p> </li> <li>Click ok and save and wait. If the internet works great, otherwise try the same with other Ethernet interfaces.</li> <li>Close the recovery Window.</li> </ol> <hr/> <p><a name="part-7"></a></p> <h2 id="part-7-hurray-finally-you-have-configured-your-windows-machine-on-droplet">Part 7: Hurray, finally you have configured your Windows machine on droplet</h2> <ul> <li><strong>Linux User</strong>: Use Remmina Client <ul> <li>Enter the VM2 IP address and Port in the format <code class="language-plaintext highlighter-rouge">ip:port</code> which you had configured for RDP on Windows Machine. Hit Enter.</li> <li>Enter the Username, Password and Click OK and start using.</li> </ul> <p><img src="/assets/img/blog/2025/windows-on-digitalocean-droplet/login_using_remmina.png" alt="login using remmina" class="zoom-img" onclick="this.classList.toggle('zoomed')"/></p> </li> <li><strong>Windows User</strong>: Use <strong>Remote Desktop Connection</strong> <ul> <li>Enter the IP address and Port <code class="language-plaintext highlighter-rouge">ip:port</code> which you configured for RDP on your Windows Machine.</li> <li>Enter the username. Click Connect.</li> <li>Enter the Password.</li> </ul> <p><img src="/assets/img/blog/2025/windows-on-digitalocean-droplet/login_using_rdp.png" alt="login using rdp" class="zoom-img" onclick="this.classList.toggle('zoomed')"/></p> </li> </ul> <p>Start using your Windows on the droplet VM2. You can preserve that <strong>windows10.gz</strong> file for later use and you can remove the droplet VM1 which you created in Part 1 for preparing Windows Disk.</p> <hr/> <p><a name="part-8"></a></p> <h2 id="part-8-allocate-unused-storage-optional">Part 8: Allocate Unused Storage (Optional)</h2> <ul> <li>Open <strong>Create and format hard disk partitions</strong> from Start menu.</li> <li>Create the disk out of unallocated space (if any).</li> </ul> <hr/> <p><a name="part-9"></a></p> <h2 id="part-9-conclusion">Part 9: Conclusion</h2> <p>Finally, we have successfully configured the Windows 10 on the Digital Ocean droplet from scratch. The same procedure can be followed for running any version of Windows.</p> <hr/> <p>Thank you :blush: and <a href="https://roshanjha-dev.github.io/blog/">Stay tuned for more blogs</a></p>]]></content><author><name>Roshan</name></author><category term="blog"/><category term="cloud-vm"/><category term="digital-ocean"/><category term="windows"/><category term="droplet"/><category term="technical"/><summary type="html"><![CDATA[Steps to run a Windows machine on Ubuntu based Digital Ocean Droplet]]></summary></entry></feed>